(work-in-progress design)

godep - dependency tool for go

Usage: godep command [arguments]

Commands:

	save	save current list of dependencies to a file
	restore	install exact dependencies previously saved
	diff	show difference between saved and installed deps
	go	run go tool in a temporary sandbox

Writes and reads file Godeps in a package directory.

The go tool is run inside a temporary sandbox containing
the specified versions of all dependencies. When it exits,
any commands that were installed in the sandbox are copied
to the outer $GOPATH/bin.

Godeps format:

- characters from # to end of line are discarded
- blank lines are discarded
- first line names the current package
- second line has output of `go version`
- subsequent lines list needed packages with versions
- packages in the standard library are omitted
- packages inside another listed package are omitted
- each dep line has two whitespace-separated fields:
  - version (as commit hash, revision number, or tag)
  - package name

Example Godeps:

github.com/kr/hk
go version go1.0.3
28676070ab99 code.google.com/p/go-netrc/netrc
3380ade90f8b github.com/kr/binarydist

Example commands:

$ godep save

$ godep go build

$ godep go test
PASS
ok  	github.com/kr/hk	0.021s

$ godep restore
$ go build
$ go test
PASS
ok  	github.com/kr/hk	0.021s

$ godep restore
godep: missing dependency: go version go1.0.3
godep: have: go version go1.1

$ godep diff
--- $GOPATH
+++ Godeps
-c8e05c046a69 code.google.com/p/go-netrc/netrc
+28676070ab99 code.google.com/p/go-netrc/netrc
